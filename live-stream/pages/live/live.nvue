<template>
	<view class="flex-1" :style="'margin-top:'+statusBarHeight+'px'">

		<video :src="src" autoplay controls='false' class="flex-1"></video>
		<!-- 头部 -->
		<view style="position: fixed;left: 0;right: 0;" :style="'margin-top:'+statusBarHeight+'px'">
			<view style="height: 80rpx;" class="px-2 flex justify-between align-center">
				<view class="flex rounded-circle" style="width: 325rpx;background-color: rgba(0,0,0,0.4);">
					<view class="p">
						<image :src="detail.user.avatar" style="width: 70rpx;height: 70rpx;" class="rounded-circle" mode=""></image>
					</view>
					<view class="flex-1 flex flex-column justify-center">
						<text class="text-white font">{{detail.user.username}}</text>
						<text class="text-white font-sm">{{detail.look_count}}</text>
					</view>
					<view class="p">
						<view class="rounded-circle flex align-center justify-center bg-main" style="width: 70rpx;height: 70rpx;">
							<text class="text-white">+</text>
						</view>
					</view>
				</view>

				<view class="flex rounded-circle" style="width: 324rpx;background-color: rgba(0,0,0,0.4);">
					<scroll-view scroll-y="true" class="flex flex-1" style="width: 75rpx;">
						<view class="p" v-for="(item,index) in list" :key="index">
							<image :src="item.avatar" style="width: 70rpx;height: 70rpx;" class="rounded-circle" mode=""></image>
						</view>
					</scroll-view>
					<view class="p">
						<view class="rounded-circle flex align-center justify-center bg-main" style="width: 70rpx; height: 70rpx;">
							<text class="text-white font-sm">{{ list.length }}</text>
						</view>
					</view>
				</view>
			</view>

			<!-- 金币 -->
			<view style="height: 80rpx;" class="my-2 px-2">
				<view class="flex rounded-circle align-center" style="width: 325rpx;background-color: rgba(0,0,0,0.4);">
					<view class="p">
						<text class="text-warning">金币</text>
					</view>
					<view class="flex-1 flex flex-column justify-center">
						<text class="text-white font">{{detail.coin}}</text>
					</view>
				</view>

			</view>

			<!-- 礼物区 -->
			<f-gift ref="gift"></f-gift>

		</view>

		<!-- 弹幕 -->
		<f-danmu ref="danmu"></f-danmu>

		<!-- 底部 -->
		<view class="flex align-center justify-between fixed-bottom " style="height: 120rpx;">
			<view class="px-2">
				<view class="btn px-3" @click="openInput">
					<text class="text-white font" @click="openInput">说点什么...</text>
				</view>
			</view>
			<view class="flex align-center">
				<view class="btn btn-icon">
					<text class="iconfont text-white" style="font-size: 40px;">
						&#xe633;
					</text>
				</view>
				<view class="btn btn-icon bg-main" @click="openGift">
					<text class="iconfont">&#xe67c;</text>
				</view>
				<view class="btn btn-icon">
					<text class="iconfont text-white">&#xe7cd;</text>
				</view>
				<view class="btn btn-icon" @click="goback">
					<text class="iconfont text-white">&#xe607;</text>
				</view>
			</view>
		</view>

		<uni-popup type="bottom" ref="input">
			<view class="bg-white flex align-center px-3" style="height: 120rpx;">
				<input type="text" v-model="content" class="border rounded flex-1 px-3 font-md" placeholder="说点什么..." style="height: 80rpx;" />
				<view class="flex align-center justify-center py-2 px-2 ml-3 rounded" @click="submit" :class="content === '' ? 'bg-main-disabled':'bg-main'">
					<text class="font text-white">发送</text>
				</view>
			</view>
		</uni-popup>

		<!-- 送礼物弹出层 -->
		<uni-popup type="bottom" ref="giftPopup">
			<view class="bg-white" style="width: 750rpx;height: 550rpx;">
				<view style="height: 100rpx;" class="flex justify-between align-center">
					<text class="text-main font-md ml-3">礼物</text>
					<view class="flex align-center justify-center" style="width: 100rpx;height: 100rpx;" @click="closeGift">
						<text class="iconfont">&#xe607;</text>
					</view>
				</view>
				<swiper :indicator-dots="true" :duration="500" style="height: 350rpx;" class="border-bottom border-top">
					<swiper-item>
						<view class="flex flex-wrap">
							<view class="flex flex-column justify-center align-center" style="width: 187rpx; height: 175rpx;" v-for="(item, index) in gifts"
							 :key="index" :class="giftActiveId === item.id ? 'border boder-main' : ''" @click="giftActiveId = item.id">
								<image :src="item.image" mode="" style="width: 100rpx; height: 100rpx;"></image>
								<view class="flex mt-1">
									<text class="text-warning font mr-1">{{ item.name }}</text>
									<text class="text-secondary font">x{{ item.coin }}</text>
								</view>
							</view>
						</view>
					</swiper-item>
				</swiper>
				<view class="flex align-center justify-end" style="height: 100rpx;">
					<view class="flex align-center justify-center py-2 px-2 mr-3 rounded bg-warning" @click="openCoin">
						<text class="font">充值</text>
					</view>
					<view class="flex align-center justify-center py-2 px-2 mr-3 rounded bg-main" @click="sendGift">
						<text class="font text-white">发送</text>
					</view>
				</view>
			</view>
		</uni-popup>


	</view>
</template>

<script>
	import myGifts from '@/common/gifts.js';
	import fGift from '@/components/live/f-gift.vue';
	import fDanmu from '@/components/live/f-danmu.vue';
	import uniPopup from '@/components/uni-ui/uni-popup/uni-popup.vue';
	import $H from '@/common/request.js';
	import $C from '@/common/config.js';
	import { mapState } from 'vuex';
	export default {
		components: {
			fGift,
			fDanmu,
			uniPopup
		},
		mounted() {
			// setInterval(() => {
			// 	this.$refs.gift.send({
			// 		username: "发送人",
			// 		avatar: "",
			// 		gift_name: "爱心",
			// 		gift_image: "/static/gift/7.png",
			// 		num: 999
			// 	})
			// }, 3000)
			
			//加入直播间
			this.joinOrLeaveLive('join');
		},
		destroyed() {
			//离开直播间
			this.joinOrLeaveLive('leave');
			//移除全局事件
			uni.$off('live',this.handleLiveEvent);
		},
		data() {
			return {
				statusBarHeight: 0,
				content: '',
				gifts: [],
				giftActiveId: 0,
				list:[],
				id:0,
				detail:{
					user:{
						id:0,
						username:'',
						avatar:''
					},
					create_time:'',
					id:1,
					title:'',
					cover:'',
					user_id:0,
					look_count:'',
					coin:0,
					key:'',
					status:0,
					userId:0
				}
			}
		},
		onLoad(option) {
			this.id = option.id;
			let res = uni.getSystemInfoSync();
			console.log(option.id)
			this.statusBarHeight = res.statusBarHeight;
			this.gifts = myGifts;
			$H.get('/live/read/' + this.id).then(res => {
				this.detail = res.data;
				console.log(res.data)
				this.sign = res.sign
				console.log(res.sign)
				console.log(this.detail.user)
			});
			//监听全局事件
			uni.$on('live',this.handleLiveEvent);
		},
			
		computed:{
			src(){
				if(this.detail.key == '' || this.sign == ''){
					return '';
				}
				return `https://yzh888.utools.club/live/${this.detail.key}.flv?sign=${this.sign}`;
			},
			...mapState({
				socket: state => state.socket,
				token: state =>state.token
			})
		},
		methods: {
			//处理直播间事件
			handleLiveEvent(e){
				let d = e.data;
				switch(e.type){
					case 'online':
					if(d.action === 'join'){
						this.list = d.data;
					}
					if(d.action === 'leave'){
						this.list = d.data
					}
					break;
				default:
					break;
				}
			},
			//加入或离开直播间
			joinOrLeaveLive(type){
				if(this.socket && this.token){
					this.socket.emit(type + 'Live',{
						live_id: this.id,
						token: this.token
					});
				}
			},
			openCoin() {
				uni.navigateTo({
					url: '../coin/coin'
				});
			},
			openGift() {
				this.$refs.giftPopup.open()
			},
			closeGift() {
				this.$refs.giftPopup.close()
			},
			sendGift() {
				if (this.giftActiveId === 0) {
					return uni.showToast({
						title: '请选择要发送的礼物',
						icon: 'none'
					});
				}
				let index = this.gifts.findIndex(item => item.id === this.giftActiveId)
				if (index === -1) {
					return
				}
				let g = this.gifts[index]
				this.$refs.gift.send({
					username: this.$store.state.user.username,
					avatar: this.$store.state.user.avatar,
					gift_name: g.name,
					gift_image: g.image,
					num: 99
				})
				this.closeGift()
			},
			goback() {
				uni.navigateBack({
					delta: 1
				});
			},
			openInput() {
				this.$store.dispatch('authMethod',() => {
					this.$refs.input.open();
				});
			},
			submit() {
				if (this.content === '') {
					return
				}
				this.$refs.danmu.send({
					id: Math.random() * 100,
					name: this.$store.state.user.username,
					content: this.content
				})
				this.content = ''
				this.$refs.input.close()
			},
			back(){
				uni.navigateBack({
					delta:1
				});
			},

		}
	}
</script>

<style>
	.btn {
		height: 80rpx;
		border-radius: 100rpx;
		background-color: rgba(255, 255, 255, 0.12);
		align-items: center;
		justify-content: center;
	}

	.btn-icon {
		width: 80rpx;
		margin-right: 20rpx;
	}
</style>
